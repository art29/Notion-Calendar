// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                     String  @id @default(cuid())
  userId                 String
  type                   String
  provider               String
  providerAccountId      String
  bot_id                 String? @db.Text
  workspace_name         String? @db.Text
  workspace_icon         String? @db.Text
  workspace_id           String? @db.Text
  duplicated_template_id String? @db.Text
  refresh_token          String? @db.Text
  access_token           String? @db.Text
  expires_at             Int?
  token_type             String?
  scope                  String?
  id_token               String? @db.Text
  session_state          String?
  user                   User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  calendars     Calendar[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Calendar {
  id               String             @id @default(cuid())
  calendarHash     String
  databaseId       String
  User             User               @relation(fields: [userId], references: [id])
  userId           String
  title            String
  description      String
  dateField        String
  calendarString   String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  CalendarReminder CalendarReminder[]

  @@unique([id])
}

model CalendarReminder {
  id         String   @id @default(cuid())
  Calendar   Calendar @relation(fields: [calendarId], references: [id], onDelete: Cascade)
  calendarId String
  remindAt   Int
}
